/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/configuration_screen/configurationViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

configurationViewBase::configurationViewBase() :
    buttonCallback(this, &configurationViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backgroundimage.setXY(0, 0);
    backgroundimage.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(backgroundimage);

    button2.setXY(19, 158);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_DOWN_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_DOWN_RELEASED_ID));
    button2.setAction(buttonCallback);
    add(button2);

    button1.setXY(19, 46);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UP_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_UP_RELEASED_ID));
    button1.setAction(buttonCallback);
    add(button1);

    image1.setXY(199, 74);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
    add(image1);

    textArea1.setPosition(199, 92, 152, 90);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4XIE).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3ZHM));
    add(textArea1);

    textArea2.setPosition(149, 0, 426, 52);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IW4F));
    add(textArea2);

    next.setXY(379, 114);
    next.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CHECK_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_EDITOR_BORDER_COLOR_50_50_E8F6FB_SVG_ID));
    next.setIconXY(25, 25);
    next.setAction(buttonCallback);
    add(next);

    radioButton1.setXY(48, 236);
    radioButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton1.setSelected(true);
    radioButton1.setDeselectionEnabled(true);
    radioButtonGroup1.add(radioButton1);
    add(radioButton1);

    radioButton2.setXY(104, 236);
    radioButton2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton2.setSelected(false);
    radioButton2.setDeselectionEnabled(true);
    radioButtonGroup1.add(radioButton2);
    add(radioButton2);

    radioButton3.setXY(163, 236);
    radioButton3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton3.setSelected(false);
    radioButton3.setDeselectionEnabled(true);
    radioButtonGroup1.add(radioButton3);
    add(radioButton3);
}

configurationViewBase::~configurationViewBase()
{

}

void configurationViewBase::setupScreen()
{

}

void configurationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //UP
        //When button1 clicked call virtual function
        //Call buttonUpClicked
        buttonUpClicked();
    }
    if (&src == &button2)
    {
        //DOWN
        //When button2 clicked call virtual function
        //Call buttonDownClicked
        buttonDownClicked();
    }
    if (&src == &next)
    {
        //next
        //When next clicked change screen to euro25_main
        //Go to euro25_main with screen transition towards East
        application().gotoeuro25_mainScreenSlideTransitionEast();
    }
}
